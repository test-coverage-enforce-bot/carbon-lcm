
CREATE TABLE LC_DATA(
            LC_STATE_ID VARCHAR(36) NOT NULL,
            LC_NAME VARCHAR(255),
            LC_STATUS VARCHAR(255),
            PRIMARY KEY (LC_STATE_ID)
)
/

CREATE TABLE LC_HISTORY(
            LC_ID INTEGER ,
            LC_STATE_ID VARCHAR(36),
            PREVIOUS_STATE VARCHAR(255),
            POST_STATE VARCHAR(255),
            USERNAME VARCHAR(255),
            UPDATED_TIME TIMESTAMP,
            UNIQUE (LC_ID)
)
/
CREATE SEQUENCE LC_HISTORY_SEQUENCE START WITH 1 INCREMENT BY 1 NOCACHE
/
CREATE OR REPLACE TRIGGER LC_HISTORY_TRIGGER
                    BEFORE INSERT
                    ON LC_HISTORY
                    REFERENCING NEW AS NEW
                    FOR EACH ROW
                     BEGIN
                       SELECT LC_HISTORY_SEQUENCE.nextval INTO :NEW.LC_ID FROM dual;
 			   END;
/

CREATE TABLE LC_CHECKLIST_DATA(
            LC_ID INTEGER,
            LC_STATE_ID VARCHAR(36),
            LC_STATE VARCHAR(255),
            CHECKLIST_NAME VARCHAR(255),
            CHECKLIST_VALUE CHAR(1) DEFAULT '0',
            UNIQUE (LC_ID),
            FOREIGN KEY (LC_STATE_ID) REFERENCES LC_DATA(LC_STATE_ID)ON DELETE CASCADE
)
/
CREATE SEQUENCE LC_CHECKLIST_DATA_SEQUENCE START WITH 1 INCREMENT BY 1 NOCACHE
/
CREATE OR REPLACE TRIGGER LC_CHECKLIST_DATA_TRIGGER
                    BEFORE INSERT
                    ON LC_CHECKLIST_DATA
                    REFERENCING NEW AS NEW
                    FOR EACH ROW
                     BEGIN
                       SELECT LC_CHECKLIST_DATA_SEQUENCE.nextval INTO :NEW.LC_ID FROM dual;
 			   END;
/
